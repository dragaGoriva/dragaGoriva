{"version":3,"sources":["components/GasPrice.js","components/station.js","App.js","reportWebVitals.js","index.js"],"names":["GasPrice","className","id","this","props","price","gasKey","React","Component","Station","selection","onSelectStation","stationData","onClick","style","selectedId","pk","backgroundColor","name","address","Object","keys","prices","length","map","key","App","selectStation","data","setState","selected","state","searchString","datas","results","e","value","target","dataChart","labels","a","dateRecorded","datasets","label","fill","borderColor","filter","d","i","toLocaleLowerCase","includes","type","onChange","handleSearchChange","placeholder","b","index","options","scales","y","beginAtZero","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93bd2308.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass GasPrice extends React.Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   // gasKey\r\n  //   // price\r\n \r\n  //   // this.state = {\r\n  //   //   isShow: true,\r\n  //   // };\r\n  // }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"gasPrice\">\r\n        <div id=\"price\">{this.props.price}</div>\r\n        <div id=\"key\">{this.props.gasKey}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GasPrice;\r\n","import React from 'react'\r\nimport './compCss/station.css'\r\nimport GasPrice from './GasPrice';\r\n\r\nclass Station extends React.Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   // stationData\r\n  //   // onSelectStation\r\n  //   // selectedId\r\n \r\n  //   // this.state = {\r\n  //   //   isShow: true,\r\n  //   // };\r\n  // }\r\n\r\n  selection = () => {\r\n    this.props.onSelectStation(this.props.stationData)\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"Station\" onClick={this.selection} style={this.props.selectedId === this.props.stationData.pk ? {backgroundColor:\"#dddddd\"}: {}}>\r\n        <div id=\"Name\">{this.props.stationData.name} </div>\r\n        <div id=\"Address\">{this.props.stationData.address}</div>\r\n        <div className=\"prices\">\r\n          {Object.keys(this.props.stationData.prices[this.props.stationData.prices.length - 1]).map(key => \r\n            {\r\n              if(this.props.stationData.prices[this.props.stationData.prices.length - 1][key] != null && key !== \"dateRecorded\")\r\n                return <GasPrice gasKey={key} price={this.props.stationData.prices[this.props.stationData.prices.length - 1][key]}/>\r\n              return undefined\r\n            }\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Station;\r\n","import React from 'react'\r\n// import ReactDOM from 'react-dom'\r\n// import { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\"\r\nimport { Line } from 'react-chartjs-2';\r\nimport './App.css';\r\nimport datas from './jsonDataAll.json';\r\nimport Station from './components/station';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchString: \"\",\r\n      selected: datas.results[0],\r\n      selectedId: datas.results[0].pk\r\n    };\r\n\r\n    // this.searchString = this.searchString.bind(this);\r\n  }\r\n\r\n  handleSearchChange(e) {\r\n    let value = e.target.value\r\n    this.setState({\r\n      searchString: value\r\n    });\r\n  }\r\n\r\n  selectStation = (data) => {\r\n    this.setState({\r\n      selected: data,\r\n      selectedId: data.pk\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let dataChart = {\r\n      labels: this.state.selected.prices.map(a => a.dateRecorded),\r\n      datasets: [\r\n        {\r\n          label: 'Bencin 95',\r\n          data: this.state.selected.prices.map(a => a[\"95\"]),\r\n          fill: false,\r\n          backgroundColor: 'red',\r\n          borderColor: 'red',\r\n        },\r\n        {\r\n          label: 'Bencin 100',\r\n          data: this.state.selected.prices.map(a => a[\"100\"]),\r\n          fill: false,\r\n          backgroundColor: \"blue\",\r\n          borderColor: 'blue',\r\n        },\r\n        {\r\n          label: 'dizel',\r\n          data: this.state.selected.prices.map(a => a[\"dizel\"]),\r\n          fill: false,\r\n          backgroundColor: 'green',\r\n          borderColor: 'green',\r\n        }\r\n      ],\r\n    };\r\n    \r\n    const options = {\r\n      scales: {\r\n        y: {\r\n          beginAtZero: false\r\n        }\r\n      }\r\n    };\r\n\r\n    let data = datas.results.filter((d, i) => {\r\n      return d.name.toLocaleLowerCase().includes(this.state.searchString.toLocaleLowerCase()) || d.address.toLocaleLowerCase().includes(this.state.searchString.toLocaleLowerCase());\r\n    })\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"search\">\r\n          <input type=\"text\" className=\"searchbar\" onChange={(e) => this.handleSearchChange(e)} placeholder=\"Search\"/>\r\n          <div className=\"StationWrap\">\r\n          {data.map((b, index) => {\r\n            return <Station stationData={b} onSelectStation={this.selectStation} selectedId={this.state.selectedId}/>\r\n          })}\r\n          </div>\r\n        </div>\r\n        <div className=\"chart\">\r\n          <div>{this.state.selected.name}</div>\r\n          <Line data={dataChart} options={options} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}