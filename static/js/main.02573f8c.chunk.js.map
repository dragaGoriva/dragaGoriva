{"version":3,"sources":["logo.svg","components/station.js","App.js","reportWebVitals.js","index.js"],"names":["Station","props","selection","onSelectStation","stationData","className","onClick","this","id","name","address","React","Component","App","selectStation","data","setState","selected","state","searchString","datas","results","e","value","target","dataChart","labels","prices","map","a","dateRecorded","datasets","label","fill","backgroundColor","borderColor","filter","d","i","toLocaleLowerCase","includes","type","onChange","handleSearchChange","placeholder","b","index","options","scales","y","beginAtZero","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAAe,I,mBC4BAA,E,kDAzBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,UAAY,WACV,EAAKD,MAAME,gBAAgB,EAAKF,MAAMG,cAXrB,E,0CAcnB,WAEE,OACE,sBAAKC,UAAU,UAAUC,QAASC,KAAKL,UAAvC,UACE,sBAAKM,GAAG,OAAR,UAAgBD,KAAKN,MAAMG,YAAYK,KAAvC,OACA,qBAAKD,GAAG,UAAR,SAAmBD,KAAKN,MAAMG,YAAYM,iB,GApB5BC,IAAMC,WC2FbC,E,kDAlFb,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IAgBRa,cAAgB,SAACC,GACf,EAAKC,SAAS,CACZC,SAAUF,KAjBZ,EAAKG,MAAQ,CACXC,aAAc,GACdF,SAAUG,EAAMC,QAAQ,IAJT,E,sDAUnB,SAAmBC,GACjB,IAAIC,EAAQD,EAAEE,OAAOD,MACrBhB,KAAKS,SAAS,CACZG,aAAcI,M,oBAUlB,WAAU,IAAD,OACHE,EAAY,CACdC,OAAQnB,KAAKW,MAAMD,SAASU,OAAOC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,gBAC9CC,SAAU,CACR,CACEC,MAAO,YACPjB,KAAMR,KAAKW,MAAMD,SAASU,OAAOC,KAAI,SAAAC,GAAC,OAAIA,EAAE,OAC5CI,MAAM,EACNC,gBAAiB,MACjBC,YAAa,OAEf,CACEH,MAAO,aACPjB,KAAMR,KAAKW,MAAMD,SAASU,OAAOC,KAAI,SAAAC,GAAC,OAAIA,EAAE,QAC5CI,MAAM,EACNC,gBAAiB,OACjBC,YAAa,QAEf,CACEH,MAAO,QACPjB,KAAMR,KAAKW,MAAMD,SAASU,OAAOC,KAAI,SAAAC,GAAC,OAAIA,EAAC,SAC3CI,MAAM,EACNC,gBAAiB,QACjBC,YAAa,WAafpB,EAAOK,EAAMC,QAAQe,QAAO,SAACC,EAAGC,GAClC,OAAOD,EAAE5B,KAAK8B,oBAAoBC,SAAS,EAAKtB,MAAMC,aAAaoB,sBAAwBF,EAAE3B,QAAQ6B,oBAAoBC,SAAS,EAAKtB,MAAMC,aAAaoB,wBAG5J,OACE,sBAAKlC,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,UACA,uBAAOoC,KAAK,OAAOpC,UAAU,YAAYqC,SAAU,SAACpB,GAAD,OAAO,EAAKqB,mBAAmBrB,IAAIsB,YAAY,WAClG,qBAAKvC,UAAU,cAAf,SACCU,EAAKa,KAAI,SAACiB,EAAGC,GACZ,OAAO,cAAC,EAAD,CAAS1C,YAAayC,EAAG1C,gBAAiB,EAAKW,wBAIxD,sBAAKT,UAAU,QAAf,UACE,8BAAME,KAAKW,MAAMD,SAASR,OAC1B,cAAC,IAAD,CAAMM,KAAMU,EAAWsB,QAxBb,CACdC,OAAQ,CACNC,EAAG,CACDC,aAAa,iB,GAxDLvC,IAAMC,WCGTuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.02573f8c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\n\nclass Station extends React.Component {\n  constructor(props) {\n    super(props);\n    //stationData\n    //onSelectStation\n \n    // this.state = {\n    //   isShow: true,\n    // };\n  }\n\n  selection = () => {\n    this.props.onSelectStation(this.props.stationData)\n  }\n\n  render() {\n\n    return (\n      <div className=\"Station\" onClick={this.selection}>\n        <div id=\"Name\">{this.props.stationData.name} </div>\n        <div id=\"Address\">{this.props.stationData.address}</div>\n      </div>\n    )\n  }\n}\n\nexport default Station;\n","import React from 'react'\n// import ReactDOM from 'react-dom'\n// import { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\"\nimport { Line } from 'react-chartjs-2';\nimport logo from './logo.svg';\nimport './App.css';\nimport datas from './jsonDataAll.json';\nimport Station from './components/station';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchString: \"\",\n      selected: datas.results[0]\n    };\n\n    // this.searchString = this.searchString.bind(this);\n  }\n\n  handleSearchChange(e) {\n    let value = e.target.value\n    this.setState({\n      searchString: value\n    });\n  }\n\n  selectStation = (data) => {\n    this.setState({\n      selected: data\n    });\n  }\n\n  render() {\n    let dataChart = {\n      labels: this.state.selected.prices.map(a => a.dateRecorded),\n      datasets: [\n        {\n          label: 'Bencin 95',\n          data: this.state.selected.prices.map(a => a[\"95\"]),\n          fill: false,\n          backgroundColor: 'red',\n          borderColor: 'red',\n        },\n        {\n          label: 'Bencin 100',\n          data: this.state.selected.prices.map(a => a[\"100\"]),\n          fill: false,\n          backgroundColor: \"blue\",\n          borderColor: 'blue',\n        },\n        {\n          label: 'dizel',\n          data: this.state.selected.prices.map(a => a[\"dizel\"]),\n          fill: false,\n          backgroundColor: 'green',\n          borderColor: 'green',\n        }\n      ],\n    };\n    \n    const options = {\n      scales: {\n        y: {\n          beginAtZero: false\n        }\n      }\n    };\n\n    let data = datas.results.filter((d, i) => {\n      return d.name.toLocaleLowerCase().includes(this.state.searchString.toLocaleLowerCase()) || d.address.toLocaleLowerCase().includes(this.state.searchString.toLocaleLowerCase());\n    })\n\n    return (\n      <div className=\"App\">\n        <div className=\"search\">\n        <input type=\"text\" className=\"searchbar\" onChange={(e) => this.handleSearchChange(e)} placeholder=\"Search\"/>\n        <div className=\"StationWrap\">\n        {data.map((b, index) => {\n          return <Station stationData={b} onSelectStation={this.selectStation}/>\n        })}\n        </div>\n        </div>\n        <div className=\"chart\">\n          <div>{this.state.selected.name}</div>\n          <Line data={dataChart} options={options} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}